@implements IDisposable
@using LutLib.View
@using System.ComponentModel
@inject MainView mainView

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LutEditor</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-cloud-upload" aria-hidden="true"></span> Load / Create
            </NavLink>
        </div>
        @if (mainView.HasGroups)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="edit">
                    <span class="oi oi-pencil" aria-hidden="true"></span> Editor 
                </NavLink>
            </div>
          
        }
        @if (mainView.HasGroups)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="save">
                    <span class="oi oi-file" aria-hidden="true"></span> Save 
                </NavLink>
            </div>
          
        }
     </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        mainView.PropertyChanged += MenuChanged;
    }

    void IDisposable.Dispose()
    {
    mainView.PropertyChanged += MenuChanged;
    }

        private void MenuChanged(object? sender, PropertyChangedEventArgs e)
        {
          InvokeAsync(StateHasChanged);
        }
}
